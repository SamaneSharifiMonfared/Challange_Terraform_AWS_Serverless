{
  "version": 4,
  "terraform_version": "1.3.6",
  "serial": 175,
  "lineage": "34fbcaca-e30b-4519-2eaa-6982f3eddf1d",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "archive_file",
      "name": "lambda-zip",
      "provider": "provider[\"registry.terraform.io/hashicorp/archive\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "excludes": null,
            "id": "da8d78690229640eb3309d832038c0f76dd42354",
            "output_base64sha256": "HqG4IODNwnNZPpUEye6xz6BieL//nnDeHIAh3EEPmJ8=",
            "output_file_mode": null,
            "output_md5": "72e3b8b3fb0f20c19b1c5f3165097238",
            "output_path": "lambda.zip",
            "output_sha": "da8d78690229640eb3309d832038c0f76dd42354",
            "output_size": 31276,
            "source": [],
            "source_content": null,
            "source_content_filename": null,
            "source_dir": "lambda",
            "source_file": null,
            "type": "zip"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3693445097",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_account",
      "name": "demo",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cloudwatch_role_arn": "arn:aws:iam::716045819505:role/api_gateway_cloudwatch_global",
            "id": "api-gateway-account",
            "throttle_settings": [
              {
                "burst_limit": 5000,
                "rate_limit": 10000
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.cloudwatch"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_api",
      "name": "lambda-api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_endpoint": "https://mh3dxds5o7.execute-api.eu-west-2.amazonaws.com",
            "api_key_selection_expression": "$request.header.x-api-key",
            "arn": "arn:aws:apigateway:eu-west-2::/apis/mh3dxds5o7",
            "body": "openapi: 3.0.0\r\ninfo:\r\n  version: 1.0.0\r\n  title: Travel Agency API\r\n  description: This is the API documentation for the TKC Travel Agency Challenge API.\r\n  contact:\r\n    email: tco@keyholding.com\r\nservers:\r\n  - url: https://travel.keyholding.com/challenge-api/\r\npaths:\r\n  /airport:\r\n    get:\r\n      description: List Airports\r\n      responses:\r\n        \"200\":\r\n          description: Success\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  type: object\r\n                  required:\r\n                    - id\r\n                    - name\r\n                  properties:\r\n                    id:\r\n                      type: string\r\n                    name:\r\n                      type: string\r\n                    latitude:\r\n                      type: string\r\n                    longitude:\r\n                      type: string\r\n                    connections:\r\n                      type: array\r\n                      items:\r\n                        type: object\r\n                        required:\r\n                          - id\r\n                          - miles\r\n                        properties:\r\n                          id:\r\n                            type: string\r\n                          miles:\r\n                            type: number\r\n        \"400\":\r\n          description: Bad request\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n        \"401\":\r\n          description: Unauthorized\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/paths/~1airport/get/responses/400/content/application~1json/schema\"\r\n        \"403\":\r\n          description: Forbidden\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/paths/~1airport/get/responses/400/content/application~1json/schema\"\r\n  \"/airport/{id}\":\r\n    get:\r\n      description: Get a single Airport\r\n      parameters:\r\n        - in: path\r\n          name: id\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: Success\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/paths/~1airport/get/responses/200/content/application~1json/schema/ite\\\r\n                  ms\"\r\n        \"400\":\r\n          $ref: \"#/paths/~1airport/get/responses/400\"\r\n        \"401\":\r\n          $ref: \"#/paths/~1airport/get/responses/401\"\r\n        \"403\":\r\n          $ref: \"#/paths/~1airport/get/responses/403\"\r\n  \"/airport/{id}/to/{toId}\":\r\n    get:\r\n      description: \"Get a journey: an ordered list of airport IDs\"\r\n      parameters:\r\n        - in: path\r\n          name: toId\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - in: path\r\n          name: id\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: Success\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                required:\r\n                  - journey\r\n                  - miles\r\n                properties:\r\n                  journey:\r\n                    type: array\r\n                    items:\r\n                      type: string\r\n                  miles:\r\n                    type: array\r\n                    items:\r\n                      type: number\r\n        \"400\":\r\n          $ref: \"#/paths/~1airport/get/responses/400\"\r\n        \"401\":\r\n          $ref: \"#/paths/~1airport/get/responses/401\"\r\n        \"403\":\r\n          $ref: \"#/paths/~1airport/get/responses/403\"\r\n",
            "cors_configuration": [],
            "credentials_arn": null,
            "description": "",
            "disable_execute_api_endpoint": false,
            "execution_arn": "arn:aws:execute-api:eu-west-2:716045819505:mh3dxds5o7",
            "fail_on_warnings": null,
            "id": "mh3dxds5o7",
            "name": "API_AGENCY",
            "protocol_type": "HTTP",
            "route_key": null,
            "route_selection_expression": "$request.method $request.path",
            "tags": null,
            "tags_all": {},
            "target": null,
            "version": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_integration",
      "name": "lambda-integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "mh3dxds5o7",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "",
            "id": "gwjqhe8",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:716045819505:function:lambda-function/invocations",
            "passthrough_behavior": "",
            "payload_format_version": "1.0",
            "request_parameters": null,
            "request_templates": null,
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 30000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.lambda-api",
            "aws_iam_role.iam_for_lambda2",
            "aws_lambda_function.lambda",
            "data.archive_file.lambda-zip",
            "data.aws_iam_policy_document.policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_route",
      "name": "lambda_route",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "mh3dxds5o7",
            "api_key_required": false,
            "authorization_scopes": null,
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "ihdxmf9",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": null,
            "request_parameter": [],
            "route_key": "GET /{proxy+}",
            "route_response_selection_expression": "",
            "target": "integrations/gwjqhe8"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.lambda-api",
            "aws_apigatewayv2_integration.lambda-integration",
            "aws_iam_role.iam_for_lambda2",
            "aws_lambda_function.lambda",
            "data.archive_file.lambda-zip",
            "data.aws_iam_policy_document.policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_stage",
      "name": "lambda-stage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [],
            "api_id": "mh3dxds5o7",
            "arn": "arn:aws:apigateway:eu-west-2::/apis/mh3dxds5o7/stages/$default",
            "auto_deploy": true,
            "client_certificate_id": "",
            "default_route_settings": [
              {
                "data_trace_enabled": false,
                "detailed_metrics_enabled": false,
                "logging_level": "",
                "throttling_burst_limit": 0,
                "throttling_rate_limit": 0
              }
            ],
            "deployment_id": "",
            "description": "",
            "execution_arn": "arn:aws:execute-api:eu-west-2:716045819505:mh3dxds5o7/$default",
            "id": "$default",
            "invoke_url": "https://mh3dxds5o7.execute-api.eu-west-2.amazonaws.com/",
            "name": "$default",
            "route_settings": [],
            "stage_variables": null,
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.lambda-api"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::716045819505:role/api_gateway_cloudwatch_global",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-01-02T16:25:45Z",
            "description": "",
            "force_detach_policies": false,
            "id": "api_gateway_cloudwatch_global",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "api_gateway_cloudwatch_global",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROA2NN5IDZYWTLG2DC5G"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "iam_for_lambda2",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::716045819505:role/iam_for_lambda2",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-01-02T16:25:45Z",
            "description": "",
            "force_detach_policies": false,
            "id": "iam_for_lambda2",
            "inline_policy": [],
            "managed_policy_arns": [],
            "max_session_duration": 3600,
            "name": "iam_for_lambda2",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": null,
            "tags_all": {},
            "unique_id": "AROA2NN5IDZY3VBJLTKTP"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_iam_policy_document.policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "api_gateway_cloudwatch_global:default",
            "name": "default",
            "name_prefix": null,
            "policy": "{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:DescribeLogGroups\",\r\n                \"logs:DescribeLogStreams\",\r\n                \"logs:PutLogEvents\",\r\n                \"logs:GetLogEvents\",\r\n                \"logs:FilterLogEvents\"\r\n            ],\r\n            \"Resource\": \"*\"\r\n        }\r\n    ]\r\n}\r\n",
            "role": "api_gateway_cloudwatch_global"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.cloudwatch"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:eu-west-2:716045819505:function:lambda-function",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda.zip",
            "function_name": "lambda-function",
            "handler": "lambda.lambda_handler",
            "id": "lambda-function",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:716045819505:function:lambda-function/invocations",
            "kms_key_arn": "",
            "last_modified": "2023-01-02T16:26:03.122+0000",
            "layers": null,
            "memory_size": 128,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:eu-west-2:716045819505:function:lambda-function:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:eu-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-2:716045819505:function:lambda-function:$LATEST/invocations",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::716045819505:role/iam_for_lambda2",
            "runtime": "python3.9",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "snap_start": [],
            "source_code_hash": "HqG4IODNwnNZPpUEye6xz6BieL//nnDeHIAh3EEPmJ8=",
            "source_code_size": 31276,
            "tags": null,
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_iam_role.iam_for_lambda2",
            "data.archive_file.lambda-zip",
            "data.aws_iam_policy_document.policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api-gw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "arn:aws:lambda:eu-west-2:716045819505:function:lambda-function",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:eu-west-2:716045819505:mh3dxds5o7/*/*/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.lambda-api",
            "aws_iam_role.iam_for_lambda2",
            "aws_lambda_function.lambda",
            "data.archive_file.lambda-zip",
            "data.aws_iam_policy_document.policy"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
